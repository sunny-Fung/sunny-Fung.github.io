{"title":"归并排序","slug":"Merge","date":"2018-04-01T02:43:57.000Z","updated":"2018-04-01T05:01:15.442Z","comments":true,"path":"api/articles/Merge.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<h2 id=\"归并排序\"><a href=\"#归并排序\" class=\"headerlink\" title=\"归并排序\"></a>归并排序</h2><p>归并排序是一种借助“归并”进行排序的方法，归并的含义是将两个或两个以上的有序序列归并成一个有序序列的过程。归并排序的主要思想是：将若干有序序列逐步归并，最终归并成一个有序序列。</p>\n<h3 id=\"要点\"><a href=\"#要点\" class=\"headerlink\" title=\"要点\"></a>要点</h3><p>开辟一个同样大小的内存空间存放归并后的序列<br>指针i、k——当前要比较的数字<br>指针s——下一个放置的位置<br>防止越界数组范围：[left, right)</p>\n<h3 id=\"Merge一次归并算法\"><a href=\"#Merge一次归并算法\" class=\"headerlink\" title=\"Merge一次归并算法\"></a>Merge一次归并算法</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Merge</span><span class=\"params\">(<span class=\"keyword\">int</span> r[], <span class=\"keyword\">int</span> r1[], <span class=\"keyword\">int</span> s, <span class=\"keyword\">int</span> m, <span class=\"keyword\">int</span> t)</span></span>&#123;</span><br><span class=\"line\">\ti = s;</span><br><span class=\"line\">\tj = m+<span class=\"number\">1</span>;</span><br><span class=\"line\">\tk = s;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(i &lt;= m &amp;&amp; j &lt;= t)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(r[i] &lt;= r[j])</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tr1[k++] = r[i++];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tr1[k++] = r[j++];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(i &lt;= m)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(i &lt;= m)&#123;</span><br><span class=\"line\">\t\t\tr1[k++] = r[i++];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(j &lt;= t)&#123;</span><br><span class=\"line\">\t\t\tr1[k++] = r[j++];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":[{"name":"Algorithm","slug":"Algorithm","count":1,"path":"api/categories/Algorithm.json"}],"tags":[]}